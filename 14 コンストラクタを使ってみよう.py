# さて、前回見た User クラスなのですが、空のクラスを作って好きに属性を加えていってもいいのですが、クラスごとに属性を統一させたり、インスタンスを作るときに初期値を与えたい場合がほとんどです。
# そのための方法を見ていきましょう。
# では今回、User 型の属性は name のみとして、インスタンス化するときにその値を与えることにしましょう。
# その場合、tom = User("tom") としてあげて、同じように bob を作りたい場合は、bob = User("bob") としてあげてください。
# こちらで入れた値はコンストラクタという特殊な関数を定義して、そこで使ってあげます。
# コンストラクタの名前は決まっていて、__init__() としてあげて、引数には self と、こちらから渡ってくる値を受ける変数を書いてあげます。
# では今回 name としてあげましょう。
# ここで self は、このクラスから作られるインスタンスを指します。
# なので、self の name 属性に渡ってきた name を渡したいので、self.name = name としてあげれば OK でしょう。
# ではこれでうまくいったかどうか確かめてみましょう。
# ではこちらのほうで print(tom.name)、そして print(bob.name) としてあげたいと思います。
# 実行してあげると…こうですね、うまくいっています。
# それから、こちらの属性はインスタンスに紐付いた変数なので、インスタンス変数と呼ばれます。
# これも用語として覚えておいてください。
# では続きは次回にしていきましょう。

# クラス

class User: # クラス名は頭文字大文字
    def __init__(self, aaa):
        # インスタンス変数
        self.name =aaa

tom = User("tom") #インスタンス
bob =User("bob")

print(tom.name)
print(bob.name)
