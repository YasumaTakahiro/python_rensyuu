# さて、続きをやっていきましょう。
# 前回、インスタンスに紐付いた変数であるインスタンス変数を見ましたが、実はクラスに紐付いたクラス変数というものも定義することができます。
# 例を見ていきましょう。
# では今回、このクラスからいくつインスタンスを作ったかをカウントするクラス変数を作ってあげたいと思います。
# そのクラス変数は、こちらに直接書いてあげれば OK です。
# では今回 count という名前にしてあげて、0 で初期化してあげましょう。
# インスタンスを作るたびに 1 ずつ増やせばいいので、コンストラクタ内で 1 足せばいいですね。
# クラス変数にアクセスするには、クラス名のあとに続けて書けば OK です。
# では User.count += 1 としてあげましょう。
# そこまでできたらカウントを表示してあげます。
# クラス変数はインスタンスを作らなくてもいきなり使えるので、例えば print(User.count) としてあげましょう。
# この時点ではインスタンスが無いので、0 が表示されるはずです。
# 下でいくつかインスタンスを作ってあげて再度表示してあげると…、今度は 2 が表示されるはずですね。
# では確かめてみましょう。
# こうですね、想定通りになっています。
# それから、クラス変数をインスタンスから呼んだ場合、同名のインスタンス変数がない場合はクラス変数が呼び出されることも覚えておきましょう。
# 例えば、tom というインスタンスから、クラス変数の count を呼び出してみます。
# こうすると、count というインスタンス変数がないので、print(tom.count) とすると、この時点では 2 が表示されるはずです。
# 見てあげると…こうですね、想定通りになっています。
# このあたりの挙動についても抑えておくようにしましょう。

# クラス

class User:  # クラス名は頭文字大文字
    count = 0

    def __init__(self, name):
        User.count += 1

        # インスタンス変数
        self.name = name


print(User.count)
tom = User("tom")  # インスタンス
bob = User("bob")
print(User.count)
print(tom.count)


