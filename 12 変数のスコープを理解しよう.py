# さて、今まで見てきた関数なのですが、変数に関していくつか注意する点があるので、例を見ていきましょう。
# では例えば say_hi() という関数を用意して、その中で変数を宣言して、それを表示してあげましょう。
# 後で見ていきますが、このあたりで実行していきます。
# ここで注意すべき点なのですが、関数の中で宣言された変数は、その関数の中だけで有効というルールを覚えておいてください。
# この範囲のことを、この変数のスコープと呼んだりするので、それも用語として覚えておきましょう。
# したがって、このあたりで print(msg) とするとエラーになってしまうはずです。
# こうですね、「msg は定義されていません」と出ています。
# ここでこちらの msg を有効にしたい場合は関数の外で宣言してあげればいいので…、例えば msg = "hello" としてあげましょう。
# ここで、こちらの msg と say_hi() 内の msg は別物ということに注意しておいてください。
# say_hi() 内の msg は say_hi() の中でのみ有効なので、よくローカル変数と呼ばれたりします。
# 対してこちらはグローバル変数と呼ばれたりするので、用語として覚えておきましょう。
# ではこちらを実行してあげると、say_hi() のほうは say_hi() 内の msg をみるので hi、こちらの msg はグローバル変数のほうをみるので hello が出てくるはずです。
# こうですね、想定通りになっているのがわかるかと思います。
# それからグローバル変数なのですが、関数の中からは参照できるけれども書き換えることはできないというルールがあります。
# 1 つずつ見ていきましょう。
# では中から参照できるかどうかをみるには、このようにしてあげれば OK ですね。
# こうしてあげると、こちらの msg は外側の msg を参照するので、say_hi() で hello、print(msg) で hello が表示されるはずです。
# 見てあげると…こうですね、うまくいっています。
# それから、グローバル変数は中から書き換えることはできないので、例えばここで msg = "hello global" としても、単にこちらでローカル変数が定義されるだけで、こちらの msg を書き換えていないのは先ほど見た通りわかるかと思います。
# ただ書き換えたい場合なのですが、こちらで global msg と指定してあげると、この関数の中で使うのはグローバル変数のほうの msg と指定することができます。
# なので、このようにしてあげると結果として say_hi() で hello global、そして print(msg) でもグローバル変数が書き換わっているので hello global が表示されるはずです。
# 見てあげると…こうですね、想定通りになっています。
# このあたりは少しややこしかったりするのですが、きちんと理解しておくようにしてください。

# 関数
msg ="hello" #グローバル変数

def say_hi():
    msg = "hi" #ローカル変数
    print(msg)

say_hi()
print(msg) #say_hi内の変数msgは関数say_hi内のみ有効であり、同じmsgでも別物のmsgをよんでいる

##############################################################################################################
msg ="hello00000000000" #グローバル変数

def say_hi():
    # 関数内からグローバル変数を読み込むことは可能
    print(msg)

say_hi()

##############################################################################################################
msg ="hello0000000000ああああああああああ" #グローバル変数

def say_hi():
    # 関数内からグローバル変数を書き換えることは通常できない
    # (msg = hogehoge としても 同名のローカル変数msgが作成されるだけ）
    global msg # そのため、global 変数名 を宣言し書き換え可能とする
    msg = "guro-baru"
    print(msg)

say_hi()
print(msg)
##############################################################################################################


